{"version":3,"sources":["../src/rendering.js"],"names":["link","scope","elem","attrs","ctrl","data","panel","find","events","on","progressBar","width","height","barHeight","Math","min","content","bars","fontSize","adjFontSize","item","barClr","thresholds","split","push","max","length","label","pop","tag","parseFloat","prefix","value","postfix","i","left","html","_","$"],"mappings":";;;;;;;AAMe,WAASA,IAAT,CAAeC,KAAf,EAAsBC,IAAtB,EAA4BC,KAA5B,EAAmCC,IAAnC,EAAyC;AACtD,QAAIC,IAAJ,EAAUC,KAAV;AACAJ,WAAOA,KAAKK,IAAL,CAAU,oBAAV,CAAP;AACA;AACAH,SAAKI,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,YAAY;AACnC,UAAI,CAACL,KAAKC,IAAV,EAAgB;AAAE;AAAS;AAC3B;AACAA,aAAOD,KAAKC,IAAZ;AACAK,kBAAYN,IAAZ;AACD,KALD;AAMA,aAASM,WAAT,CAAqBN,IAArB,EAA2B;AACzB;AACA,UAAIO,QAAQT,KAAKS,KAAL,EAAZ;AACA,UAAIC,SAASV,KAAKU,MAAL,EAAb;AACA,UAAIC,YAAYC,KAAKC,GAAL,CAASJ,QAAQ,KAAjB,EAAwBP,KAAKQ,MAAL,GAAc,KAAtC,CAAhB;AACA;AACA,UAAII,UAAU,yDAAd;AACA;AACA,UAAIC,OAAOb,KAAKa,IAAhB;AACA;AACA,UAAIC,WAAWd,KAAKe,WAAL,GAAmBf,KAAKc,QAAxB,GAAmC,OAAlD;AACA;AACA,WAAI,IAAIE,IAAR,IAAgBH,IAAhB,EAAqB;AACnB;AACA,YAAII,SAASJ,KAAKG,IAAL,EAAWE,UAAX,CAAsBC,KAAtB,CAA4B,GAA5B,CAAb;AACAF,eAAOG,IAAP,CAAYP,KAAKG,IAAL,EAAWK,GAAvB;AACA;AACAJ,eAAOK,MAAP,GAAgBT,KAAKG,IAAL,EAAWO,KAAX,CAAiBD,MAAjC,IAA4CT,KAAKG,IAAL,EAAWO,KAAX,CAAiBH,IAAjB,CAAsB,wBAAtB,CAA5C;AACAH,eAAOK,MAAP,GAAgBT,KAAKG,IAAL,EAAWO,KAAX,CAAiBD,MAAjC,IAA4CT,KAAKG,IAAL,EAAWO,KAAX,CAAiBC,GAAjB,EAA5C;AACA;AACA,YAAIC,MAAMZ,KAAKG,IAAL,EAAWO,KAArB;AACA;AACA,YAAIF,MAAMK,WAAWb,KAAKG,IAAL,EAAWK,GAAtB,CAAV;AACA,YAAIV,MAAMe,WAAWb,KAAKG,IAAL,EAAWL,GAAtB,CAAV;AACA;AACAC,mBAAW,2DAA2DE,QAA3D,GAAsE,oDAAtE,GAA6HE,IAA7H,GAAoI,QAA/I;AACAJ,mBAAW,uDAAuDE,QAAvD,GAAkE,oDAAlE,GAAyHD,KAAKG,IAAL,EAAWW,MAApI,GAA6I,GAA7I,GAAmJd,KAAKG,IAAL,EAAWY,KAA9J,GAAsK,GAAtK,GAA4Kf,KAAKG,IAAL,EAAWa,OAAvL,GAAiM,QAA5M;AACAjB,mBAAW,sDAAsDH,SAAtD,GAAkE,6BAAlE,GAAiGE,GAAjG,GAAsG,SAAjH;AACA,aAAI,IAAImB,CAAR,IAAab,MAAb,EAAoB;AAClB;AACA,cAAIV,QAAQ,MAAMU,OAAOK,MAAzB;AACAV,qBAAW,6CAA4CL,KAA5C,GAAoD,aAApD,GAAoEE,SAApE,GAAgF,wBAAhF,GAA2GgB,IAAIK,CAAJ,CAA3G,GAAoH,iDAApH,GAAuKb,OAAOa,CAAP,CAAvK,GAAkL,eAA7L;AACD;AACD;AACA,YAAIC,OAAOlB,KAAKG,IAAL,EAAWY,KAAX,GAAmBF,WAAWL,MAAIV,GAAf,CAAnB,GAAyC,GAApD;AACAC,mBAAW,uCAAqCmB,IAArC,GAA0C,aAArD;AACAnB,mBAAW,QAAX;AACD;AACDA,iBAAW,QAAX;AACAd,WAAKkC,IAAL,CAAUpB,OAAV;AACD;AACF;;qBAnDuBhB,I;;;;AANjBqC,O;;AACAC,O","file":"rendering.js","sourcesContent":["import _ from 'lodash';\r\nimport $ from 'jquery';\r\nimport 'jquery.flot';\r\nimport 'jquery.flot.pie';\r\n\r\n// elem是ng-transclude组件bar的容器 ctrl是progressbar插件的实例\r\nexport default function link (scope, elem, attrs, ctrl) {\r\n  var data, panel;\r\n  elem = elem.find('.progressbar-panel');\r\n  // 向ctrl实例注册render函数\r\n  ctrl.events.on('render', function () {\r\n    if (!ctrl.data) { return; }\r\n    // data后台的相应值\r\n    data = ctrl.data;\r\n    progressBar(ctrl);\r\n  });\r\n  function progressBar(ctrl) {\r\n    // 获取bar的自适应高度\r\n    var width = elem.width();\r\n    var height = elem.height();\r\n    var barHeight = Math.min(width * 0.045, ctrl.height * 0.055);\r\n    // 拼bar容器标签\r\n    var content = '<div class=\"bar-container\" style=\"padding: 10px 27px;\">';\r\n    // 重复引用赋值(简化引用操作)\r\n    var bars = ctrl.bars\r\n    // bar文字大小\r\n    var fontSize = ctrl.adjFontSize ? ctrl.fontSize : '0.8vw';\r\n    // 循环bar对象\r\n    for(var item in bars){\r\n      // 获取节点值数组\r\n      var barClr = bars[item].thresholds.split(',');\r\n      barClr.push(bars[item].max)\r\n      // 关联阀值添加删除\r\n      barClr.length > bars[item].label.length && (bars[item].label.push('rgba(12, 201, 12, 0.9)'))\r\n      barClr.length < bars[item].label.length && (bars[item].label.pop())\r\n      // 获取tag对象\r\n      var tag = bars[item].label;\r\n      // 获取最大值和最小值\r\n      var max = parseFloat(bars[item].max);\r\n      var min = parseFloat(bars[item].min);\r\n      // 拼接节段label\r\n      content += '<div style=\"text-align:left; color:#ffffff; font-size:' + fontSize + '; display:inline-block; margin:19px 1px 1px 1px;\">' + item + '</div>';\r\n      content += '<div style=\"float:right; color:#ffffff; font-size:' + fontSize + '; display:inline-block; margin:19px 1px 1px 1px;\">' + bars[item].prefix + ' ' + bars[item].value + ' ' + bars[item].postfix + '</div>';\r\n      content += '<div class=\"progress\" style=\"width: 100%; height:' + barHeight + 'px;\"><span class=\"tag-min\">'+ min +'</span>';\r\n      for(var i in barClr){\r\n        // 节段宽度(！！！需计算)\r\n        var width = 100 / barClr.length;\r\n        content += '<div class=\"progress-bar\" style=\"width: '+ width + '%; height: ' + barHeight + 'px; background-color: ' + tag[i] + '; display:inline-block;\"><span class=\"tag-val\">'+ barClr[i] +'</span></div>';\r\n      }\r\n      // 获取滑块的位置\r\n      var left = bars[item].value / parseFloat(max-min) * 100\r\n      content += '<span class=\"bar-tag\" style=\"left:'+left+'%;\"></span>'\r\n      content += '</div>';\r\n    }\r\n    content += '</div>';\r\n    elem.html(content);\r\n  }\r\n}\r\n"]}